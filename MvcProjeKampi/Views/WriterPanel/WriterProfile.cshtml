@model  EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h2 style="text-align:center">Profilinizi Düzenleyin</h2>
@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
    <div class="form-group">
        @*Test*@

        @*@Html.Label("Yazar ID")*@
        @Html.HiddenFor(x => x.WriterID, new { @class = "form-control" })

        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName)
        <br />
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurName)
        <br />
        @Html.Label("Yazar Mail")
        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterMail)
        <br />
        @Html.Label("Yazar Şifresi")
        <div class="password-input">
            <input type="password" id="passwordField" class="form-control" />
            <i class="toggle-password fas fa-eye"></i>
        </div>
        @Html.ValidationMessageFor(x => x.WriterPassword)
        <br />
        @Html.Label("Yazar Göresel Link")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage)
        <br />
        @Html.Label("Yazar Ünvan")
        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterTitle)
        <br />
        @Html.Label("Yazar Hakkında")
        @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout)
        <br />
        <button class="btn btn-info">Değişiklikleri Uygula</button>

    </div>

    <style>

        /*Password input İçin */
        .password-input {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
            color: black;
        }

            .toggle-password:hover {
                color: blue;
            }
       
        /*Tablo Görünümü*/

    </style>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const passwordField = document.getElementById("passwordField");
            const togglePassword = document.querySelector(".toggle-password");

            togglePassword.addEventListener("click", function () {
                if (passwordField.type === "password") {
                    passwordField.type = "text";
                    togglePassword.classList.remove("fa-eye");
                    togglePassword.classList.add("fa-eye-slash");
                } else {
                    passwordField.type = "password";
                    togglePassword.classList.remove("fa-eye-slash");
                    togglePassword.classList.add("fa-eye");
                }
            });
        });

    </script>
}
